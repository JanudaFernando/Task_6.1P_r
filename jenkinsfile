pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven.' 
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests with JavaUnit...' 
                echo 'Running integration tests with Selenium...' 
            }
            post {
                always {
                    script {
                        // Save logs to a file
                        sh 'echo "Logs for Unit and Integration Tests" > test-stage.log'
                        archiveArtifacts artifacts: 'test-stage.log', allowEmptyArchive: true
                    }
                    // Send email with attached log
                    emailext attachmentsPattern: 'test-stage.log',
                             to: "fernandojanuda@gmail.com",
                             subject: "Test Stage Completed - Build # ${currentBuild.number}",
                             body: "The tests have completed. Please review the attached logs."
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code quality with SonarQube...' 
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Scanning for vulnerabilities with SAST scanner..'
            }
            post {
                always {
                    script {
                        // Save logs to a file
                        sh 'echo "Logs for Security Scan" > security-scan.log'
                        archiveArtifacts artifacts: 'security-scan.log', allowEmptyArchive: true
                    }
                    // Send email with attached log
                    emailext attachmentsPattern: 'security-scan.log',
                             to: "fernandojanuda@gmail.com",
                             subject: "Security Scan Completed - Build # ${currentBuild.number}",
                             body: "The security scan has completed. Please review the attached logs."
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying application to staging server using AWS..'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment...'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying application to production server using AWS tools..'
            }
        }
    }
  
    post {
        success {
            mail to: "fernandojanuda@gmail.com",
                 subject: "Pipeline Success - Build # ${currentBuild.number}",
                 body: "The pipeline has successfully completed all stages. Build logs are attached."
        }
        failure {
            mail to: "fernandojanuda@gmail.com",
                 subject: "Pipeline Failure - Build # ${currentBuild.number}",
                 body: "The pipeline has failed at stage ${currentStage.name}. Build logs are attached."
        }
    }
}
