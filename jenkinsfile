pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven.'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests with JavaUnit...'
                echo 'Running integration tests with Selenium...'
            }
            post {
                always {
                    archiveArtifacts artifacts: '**/target/*.log', allowEmptyArchive: true
                }
                success {
                    mail to: "fernandojanuda@gmail.com",
                         subject: "Tests Passed - Build # ${env.BUILD_NUMBER}",
                         body: "Unit and integration tests have successfully completed. Build logs are attached.",
                         attachLog: true
                }
                failure {
                    mail to: "fernandojanuda@gmail.com",
                         subject: "Tests Failed - Build # ${env.BUILD_NUMBER}",
                         body: "Unit and integration tests have failed. Build logs are attached.",
                         attachLog: true
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code quality with SonarQube...'
            }
            post {
                always {
                    archiveArtifacts artifacts: '**/sonarqube-analysis.log', allowEmptyArchive: true
                }
                success {
                    mail to: "fernandojanuda@gmail.com",
                         subject: "Code Analysis Passed - Build # ${env.BUILD_NUMBER}",
                         body: "Code analysis has completed successfully. Build logs are attached.",
                         attachLog: true
                }
                failure {
                    mail to: "fernandojanuda@gmail.com",
                         subject: "Code Analysis Failed - Build # ${env.BUILD_NUMBER}",
                         body: "Code analysis has failed. Build logs are attached.",
                         attachLog: true
                }
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Scanning for vulnerabilities with SAST scanner...'
            }
            post {
                always {
                    archiveArtifacts artifacts: '**/sast-scan.log', allowEmptyArchive: true
                }
                success {
                    mail to: "fernandojanuda@gmail.com",
                         subject: "Security Scan Passed - Build # ${env.BUILD_NUMBER}",
                         body: "Security scan has successfully completed. Build logs are attached.",
                         attachLog: true
                }
                failure {
                    mail to: "fernandojanuda@gmail.com",
                         subject: "Security Scan Failed - Build # ${env.BUILD_NUMBER}",
                         body: "Security scan has failed. Build logs are attached.",
                         attachLog: true
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying application to staging server using AWS...'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment...'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying application to production server using AWS tools...'
            }
        }
    }

    post {
        success {
            mail to: "fernandojanuda@gmail.com",
                 subject: "Pipeline Success - Build # ${env.BUILD_NUMBER}",
                 body: "The pipeline has successfully completed all stages. Build logs are attached.",
                 attachLog: true
        }
        failure {
            mail to: "fernandojanuda@gmail.com",
                 subject: "Pipeline Failure - Build # ${env.BUILD_NUMBER}",
                 body: "The pipeline has failed. Build logs are attached.",
                 attachLog: true
        }
    }
}
